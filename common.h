#ifndef COMMON_H
#define COMMON_H

struct STRCT    // Real in-data stucture's name with her real fielfs names
{
    long long int param1    = 10000000000; //  несущая частота зондирующего сигнала, 8-12 ГГц
    float   param2          = 0.000002;    //  длительность зондирующих импульсов БРЛС в пачке, 1-4 мкс
    float   param3          = 0.000071;    //  ??? период следования зондирующих импульсв БРЛС в пачке ? - c (для относительной адекватности выбран режим работы в догон с применением СЧП 14 кГц !!!!!)
    float   param4          = 0.00007;     //  период следования пачки зондирующих импульсв БРЛС, 10-20  мc
    float   param5          = 0.0000001;    //  ??? Интервал дискретизации моделируемого сигнала по времени ? - c определяется при отладке  (10-15 мГц.)
    int     param6          = 500;         //  Время моделирования сигнала помехи, отраженного от земной поверхности, до 500 с
    float   param7          = 2.5;          //  Ширина главного лепестка ДНА БРЛС в угломестной плоскости 2.5 градуса
    float   param8          = 2.5;          //  Ширина главного лепестка ДНА БРЛС в азимутальной плоскости 2.5 градуса
    int     param9          = 5760;         //  Kоэффициент усиления антенны БРЛС на передачу по главному лепестку ДНА БРЛС
    int     param10         = 5760;         //  Kоэффициент усиления антенны БРЛС на приём по главному лепестку ДНА БРЛС
    int     param11         = 23;           //  Коэффициент ослабления сигнала, излучаемого по боковым лепесткам ДНА БРЛС, 13-35 дБ
    int     param12         = 27;           //  Коэффициент ослабления сигнала, принимаемого по боковым лепесткам ДНА БРЛС, 20-35 дБ
    int     param13         = 3400;         //  Мощность радиопередающего устройства БРЛС, 3400 Вт.
    int     param14         = 30;           //  Ширина  области  боковых лепестков ДНА БРЛС в угломестной  плоскости, принимающая отраженный сигнал, 20-40 град.
    int     param15         = 500;          //  Модуль вектора скорости носителя БРЛС, 150-680 м/c
    int     param16         = 270;          //  Азимут (отсчитывается от координатной оси OcXc по часовой стрелке)носителя БРЛС, 0-359 град.
    int     param17         = 0;            //  Угол места (отсчитывается от плоскости OcXcZc против или по часовой стрелке от вектора скорости) носителя БРЛС, -90-90 град., но равно 0
    int     param18         = 7650;         //  Дальность до носителя БРЛС в СК OcXcYcZc Определяется заданным сценарием, м.
    int     param19         = 270;          //  Азимут (отсчитывается от координатной оси OcXc по часовой стрелки носителя БРЛС в СК OcXcYcZc, 0-359 град.
    int     param20         = 45;           //  Угол места (отсчитывается от плоскости OcXcZc против часовой стрелки) носителя БРЛС в СК OcXcYcZc, 0-90 град.
    int     param21         = 0;            //  Азимут определяющий положение главного лепестка ДНА БРЛС в сферической СК, связанной с СК OXYZ носителя БРЛС. Отсчитывается от оси OX по часовой стрелке 0-359 град.
    int     param22         = -40;          //  Угол места, определяющий положение главного лепестка ДНА БРЛС в сферической СК, связанной с СК OXYZ носителя БРЛС, -90-90 град.
    float   param23         = 0.009;        //  Удельная ЭПР земной поверхности (справочная?), м^2/м^2
    int     param24         = 7;            //  Модуль скорости ветра над земной поверхностью, 0-30 м/с
    bool    param25         = true;         //  Индекс поверхности true - содержит подвижные эл.ты (раст.), false - несодержит.
    bool    param26         = true;        //  Флаг обновления исходных данных (начала пачки и т.д.) true - данные обновлены, полный перерасчет, false - данные не обновлялись, обновить только квадратуры.
    int     param27         = 0;            //  Имитатор внешнего счетчика тактов
};

#endif // COMMON_H
